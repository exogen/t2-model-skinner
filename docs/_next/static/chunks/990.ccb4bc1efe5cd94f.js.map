{"version":3,"file":"static/chunks/990.ccb4bc1efe5cd94f.js","mappings":"ACAA,aACA,CAACA,KAAK,gBAAmB,CAAGA,KAAK,gBAAmB,EAAI,EAAE,EAAEC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAElE,GACC,SAASC,CAAuB,CAAEC,CAAmB,CAAEC,CAAmB,CAAE,CAEnFA,EAAoBC,CAAC,CAACF,GACDC,EAAoBE,CAAC,CAACH,EAAqB,CACzC,QAAW,UAAW,CAAE,OAAqBI,CAAa,CAC5D,GACA,IAAIC,EAAiDJ,EAAoB,MACrEK,EAAqCL,EAAoB,MACLA,EAAoB,KDZjG,IAAAM,EAAAN,EAAA,MAmDqB,SATYO,EAE/BC,CAAA,MAtBAC,EA8BA,IAAMC,SAAAA,CAAC,CAAAC,oBAAAA,CAA4B,CAAGC,cAAAA,CAAA,CAAAC,gBAAAA,EAAA,GAAAC,YAAAA,CAChC,CAAAC,aAAAA,CAAA,CAAAC,YAAAA,CAAA,CAAAC,SAAAA,CAAA,EAAAT,EAEA,CAACC,EAAUS,EAAa,IAAAb,EAAAc,QAAc,QAEtC,CAAAC,EAAUC,EAAA,IAAAhB,EAAcc,QAAA,MAC5BG,EAAK,GAAAjB,EAAyCkB,OAAO,SACxCH,GAAAX,EAAAe,KAAA,CAGX,CACAf,YAAAA,EACAe,MAAAf,EAAAe,KAAA,CACFJ,SAAAA,CACC,EANA,KAMA,CAAcX,EAASW,EAE1B,EAgDE,OA9FFX,EAgDAA,EAhDgB,GAAAJ,EACGoB,SAAA,OACfhB,GACDA,CAAAA,EAAAiB,SAAA,IACA,GAAajB,EAClB,EA2CkB,GAAAJ,EACIoB,SAAA,UAChB,CAAAhB,EACD,MACD,CAEA,IAAAkB,EAAM,GACJC,EAAY,KACVD,GACDN,EAAA,GAEH,EAEa,OAAbZ,EAAaoB,gBAAA,QAAAD,GACX,KACAD,EAAA,GACFlB,EAAAqB,mBAAA,QAAAF,EACC,IAAcnB,EAASC,EAE1B,EAAgB,GAAAL,EACIoB,SAAA,OAChBhB,GAGAA,EAAUsB,MAAI,EACfV,EAAA,GACA,GAAcZ,EAASC,EAE1B,EAAgB,GAAAL,EACiBoB,SAAA,OAC7BhB,GAAAW,IAGAP,EACFJ,EAAOuB,KAAA,GAENvB,EAAAwB,IAAA,GACA,GAAcxB,EAAUW,EAAgBP,EAE3C,EAAgB,GAAAR,EACiBoB,SAAA,EAAa,KAC1ChB,GAAYW,GAAaJ,GAC1BP,EAAAyB,YAAA,iBAAAlB,EACA,GAAcP,EAAUW,EAAYJ,EAEvC,EACE,GAAAZ,EAAA+B,IAAA,EAAA/B,EAAAgC,QAAA,EAAAnB,SAAA,CAES,GAAAb,EAAAiC,GAAA,kBACLC,IAAIpB,EACJqB,IAAK,iBACLC,IAAA9B,EACA,mBAAe,EACf,kBAAc,GACd,eAAAI,EACA,gBAAAC,EACA,oBAAgB,QAChB,iBAAUH,MAAAA,EAAgCA,EAAA6B,KAAAA,CAAA,CAC1CC,SAAA9B,EAAa,eACb,uBACA,oBAAOD,MAAAA,EAAAA,EAAA8B,KAAAA,CAAA,CAAAE,MAAE,CAAeC,MAAA,OAAeC,OAAA,OAExC,GAC6BzB,EAAQ,GAAAhB,EAAAiC,GAAA,EAAA/B,EAAAwC,CAAA,CAAAC,QAAA,EAAAC,MAAA1B,EACjCL,SAEGA,CAAA,UAKC,CAA8C,SAC3Dd,EAAA8C,CAAO,EAAC,MAAsD,GAAA7C,EAAAiC,GAAA,EAAA9B,EAAA,CAAzB,GAAA0C,CAAM,EAC5CA,EAAAvC,QAAA","sources":["webpack://_N_E/./src/ModelViewer.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { CSSProperties, ReactNode, useEffect, useMemo, useState } from \"react\";\nimport \"@google/model-viewer\";\nimport type { ModelViewerElement } from \"@google/model-viewer\";\nimport { ModelViewerContext } from \"./useModelViewer\";\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"model-viewer\": ModelViewerAttributes;\n    }\n    interface ModelViewerAttributes {\n      alt: string;\n      src: string;\n      ref: (modelViewer: ModelViewerElement | null) => void;\n      autoplay: \"true\" | \"false\";\n      scale?: string;\n      style: CSSProperties;\n    }\n  }\n}\n\nfunction useTimeScale(modelViewer: ModelViewerElement | null) {\n  useEffect(() => {\n    if (modelViewer) {\n      modelViewer.timeScale = 0.5;\n    }\n  }, [modelViewer]);\n}\n\ninterface ModelViewerProps {\n  modelUrl: string;\n  environmentImageUrl: string | null;\n  colorImageUrl?: string;\n  metallicImageUrl?: string;\n  animationName: string | null;\n  animationPaused?: boolean;\n  cameraOrbit?: string;\n  cameraTarget?: string;\n  fieldOfView?: string;\n  children?: ReactNode;\n}\n\nfunction ModelViewerKeyedByModel({\n  modelUrl,\n  environmentImageUrl,\n  animationName,\n  animationPaused = false,\n  cameraOrbit,\n  cameraTarget,\n  fieldOfView,\n  children,\n}: ModelViewerProps) {\n  const [modelViewer, setModelViewer] = useState<ModelViewerElement | null>(\n    null\n  );\n  const [isLoaded, setLoaded] = useState(false);\n\n  const context = useMemo(() => {\n    if (!modelViewer || !isLoaded || !modelViewer.model) {\n      return null;\n    }\n    return {\n      modelViewer,\n      model: modelViewer.model,\n      isLoaded,\n    };\n  }, [modelViewer, isLoaded]);\n\n  useTimeScale(modelViewer);\n\n  useEffect(() => {\n    if (!modelViewer) {\n      return;\n    }\n    let stale = false;\n\n    const handleLoad = () => {\n      if (!stale) {\n        setLoaded(true);\n      }\n    };\n    modelViewer.addEventListener(\"load\", handleLoad);\n\n    return () => {\n      stale = true;\n      modelViewer.removeEventListener(\"load\", handleLoad);\n    };\n  }, [modelViewer, modelUrl]);\n\n  useEffect(() => {\n    if (!modelViewer) {\n      return;\n    }\n    if (modelViewer.loaded) {\n      setLoaded(true);\n    }\n  }, [modelViewer, modelUrl]);\n\n  useEffect(() => {\n    if (!modelViewer || !isLoaded) {\n      return;\n    }\n    if (animationPaused) {\n      modelViewer.pause();\n    } else {\n      modelViewer.play();\n    }\n  }, [modelViewer, isLoaded, animationPaused]);\n\n  useEffect(() => {\n    if (modelViewer && isLoaded && fieldOfView) {\n      modelViewer.setAttribute(\"field-of-view\", fieldOfView);\n    }\n  }, [modelViewer, isLoaded, fieldOfView]);\n\n  return (\n    <>\n      <model-viewer\n        ref={setModelViewer}\n        alt=\"Tribes 2 Model\"\n        src={modelUrl}\n        shadow-intensity={0}\n        camera-controls\n        camera-orbit={cameraOrbit}\n        camera-target={cameraTarget}\n        min-field-of-view=\"10deg\"\n        animation-name={animationName ?? undefined}\n        autoplay={animationName ? \"true\" : \"false\"}\n        touch-action=\"pan-y\"\n        environment-image={environmentImageUrl ?? undefined}\n        style={{ width: \"100%\", height: \"100%\" }}\n      />\n      {isLoaded ? (\n        <ModelViewerContext.Provider value={context}>\n          {children}\n        </ModelViewerContext.Provider>\n      ) : null}\n    </>\n  );\n}\n\nexport default function ModelViewer(props: ModelViewerProps) {\n  return <ModelViewerKeyedByModel key={props.modelUrl} {...props} />;\n}\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[990],{\n\n/***/ 85:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ModelViewer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5893);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7294);\n/* harmony import */ var _google_model_viewer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(258);\n/* harmony import */ var _useModelViewer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8496);\n\n\n\n\nfunction useTimeScale(modelViewer) {\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (modelViewer) {\n            modelViewer.timeScale = 0.5;\n        }\n    }, [\n        modelViewer\n    ]);\n}\nfunction ModelViewerKeyedByModel(param) {\n    let { modelUrl , environmentImageUrl , animationName , animationPaused =false , cameraOrbit , cameraTarget , fieldOfView , children  } = param;\n    const [modelViewer, setModelViewer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoaded, setLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!modelViewer || !isLoaded || !modelViewer.model) {\n            return null;\n        }\n        return {\n            modelViewer,\n            model: modelViewer.model,\n            isLoaded\n        };\n    }, [\n        modelViewer,\n        isLoaded\n    ]);\n    useTimeScale(modelViewer);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!modelViewer) {\n            return;\n        }\n        let stale = false;\n        const handleLoad = ()=>{\n            if (!stale) {\n                setLoaded(true);\n            }\n        };\n        modelViewer.addEventListener(\"load\", handleLoad);\n        return ()=>{\n            stale = true;\n            modelViewer.removeEventListener(\"load\", handleLoad);\n        };\n    }, [\n        modelViewer,\n        modelUrl\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!modelViewer) {\n            return;\n        }\n        if (modelViewer.loaded) {\n            setLoaded(true);\n        }\n    }, [\n        modelViewer,\n        modelUrl\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!modelViewer || !isLoaded) {\n            return;\n        }\n        if (animationPaused) {\n            modelViewer.pause();\n        } else {\n            modelViewer.play();\n        }\n    }, [\n        modelViewer,\n        isLoaded,\n        animationPaused\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (modelViewer && isLoaded && fieldOfView) {\n            modelViewer.setAttribute(\"field-of-view\", fieldOfView);\n        }\n    }, [\n        modelViewer,\n        isLoaded,\n        fieldOfView\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"model-viewer\", {\n                ref: setModelViewer,\n                alt: \"Tribes 2 Model\",\n                src: modelUrl,\n                \"shadow-intensity\": 0,\n                \"camera-controls\": true,\n                \"camera-orbit\": cameraOrbit,\n                \"camera-target\": cameraTarget,\n                \"min-field-of-view\": \"10deg\",\n                \"animation-name\": animationName !== null && animationName !== void 0 ? animationName : undefined,\n                autoplay: animationName ? \"true\" : \"false\",\n                \"touch-action\": \"pan-y\",\n                \"environment-image\": environmentImageUrl !== null && environmentImageUrl !== void 0 ? environmentImageUrl : undefined,\n                style: {\n                    width: \"100%\",\n                    height: \"100%\"\n                }\n            }),\n            isLoaded ? /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_useModelViewer__WEBPACK_IMPORTED_MODULE_3__/* .ModelViewerContext.Provider */ .K.Provider, {\n                value: context,\n                children: children\n            }) : null\n        ]\n    });\n}\nfunction ModelViewer(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ModelViewerKeyedByModel, {\n        ...props\n    }, props.modelUrl);\n}\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","r","d","ModelViewer","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","_useModelViewer__WEBPACK_IMPORTED_MODULE_3__","ModelViewerKeyedByModel","param","modelViewer","modelUrl","environmentImageUrl","animationName","animationPaused","cameraOrbit","cameraTarget","fieldOfView","children","setModelViewer","useState","isLoaded","setLoaded","context","useMemo","model","useEffect","timeScale","stale","handleLoad","addEventListener","removeEventListener","loaded","pause","play","setAttribute","jsxs","Fragment","jsx","ref","alt","src","undefined","autoplay","style","width","height","K","Provider","value","props"],"sourceRoot":""}