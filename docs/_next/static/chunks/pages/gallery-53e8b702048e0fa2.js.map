{"version":3,"file":"static/chunks/pages/gallery-53e8b702048e0fa2.js","mappings":"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","sources":["webpack://_N_E/?e81b","webpack://_N_E/./src/useManifest.ts","webpack://_N_E/./src/pages/gallery.tsx","webpack://_N_E/./src/pages/gallery.module.css","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/gallery\",\n      function () {\n        return require(\"private-next-pages/gallery.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/gallery\"])\n      });\n    }\n  ","import { useState, useEffect } from \"react\";\n\nexport type Manifest = {\n  customSkins: Record<string, string[]>;\n  newSkins: Record<string, string[]>;\n};\n\nconst baseManifestPath = `https://exogen.github.io/t2-skins`;\nexport const defaultManifest: Manifest = {\n  customSkins: {},\n  newSkins: {},\n};\n\nexport default function useManifest(): [Manifest, boolean] {\n  const [manifest, setManifest] = useState<Manifest>(defaultManifest);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    let ignore = false;\n\n    const loadCustomSkins = async () => {\n      let res;\n      try {\n        res = await fetch(`${baseManifestPath}/skins.json`, { signal });\n        if (!ignore) {\n          const json = await res.json();\n          if (!ignore) {\n            setManifest(json as Manifest);\n          }\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    loadCustomSkins();\n\n    return () => {\n      ignore = true;\n      controller.abort();\n    };\n  }, []);\n\n  const isLoaded = manifest !== defaultManifest;\n  return [manifest, isLoaded];\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { CgSpinnerTwo } from \"react-icons/cg\";\nimport { FaChevronLeft, FaGithub } from \"react-icons/fa\";\nimport { useRouter } from \"next/router\";\nimport orderBy from \"lodash.orderby\";\nimport useManifest from \"../useManifest\";\nimport styles from \"./gallery.module.css\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\n\nconst baseManifestPath = `https://exogen.github.io/t2-skins`;\nconst emptySkins: string[] = [];\n\nconst modelOrder: Record<string, number> = {\n  lmale: 0,\n  mmale: 1,\n  lfemale: 2,\n  mfemale: 3,\n  hmale: 4,\n  lbioderm: 5,\n  mbioderm: 6,\n  hbioderm: 7,\n};\n\nexport default function GalleryPage() {\n  const router = useRouter();\n  const [manifest, isLoaded] = useManifest();\n  const [selectedModel, setSelectedModel] = useState(\"lmale\");\n  const actualModel = selectedModel === \"hfemale\" ? \"hmale\" : selectedModel;\n  const customSkins = manifest.customSkins?.[actualModel] ?? emptySkins;\n\n  const newSkinList = useMemo(() => {\n    if (manifest?.newSkins && selectedModel === \"new\") {\n      const allNewSkins: Array<{ name: string; model: string }> = [];\n\n      Object.entries(manifest.newSkins).forEach(([model, names]) => {\n        allNewSkins.push(...names.map((name) => ({ name, model })));\n      });\n\n      return orderBy(\n        allNewSkins,\n        [(skin) => skin.name.toLowerCase(), (skin) => modelOrder[skin.model]],\n        [\"asc\", \"asc\"]\n      );\n    } else {\n      return [];\n    }\n  }, [selectedModel, manifest]);\n\n  const filteredSkins = selectedModel === \"new\" ? newSkinList : customSkins;\n\n  const filter =\n    router.query.filter && typeof router.query.filter === \"string\"\n      ? router.query.filter\n      : \"lmale\";\n\n  useEffect(() => {\n    setSelectedModel(filter);\n  }, [filter]);\n\n  return (\n    <>\n      <Head>\n        <title>Tribes 2 Skin Gallery</title>\n      </Head>\n      <main className={styles.GalleryPage}>\n        <div className={styles.Tools}>\n          <Link className={styles.Back} href=\"../\">\n            <FaChevronLeft size={12} className={styles.Icon} />{\" \"}\n            <span className={styles.Label}>Back to Editor</span>\n          </Link>\n          <select\n            tabIndex={0}\n            id=\"ModelSelect\"\n            aria-label=\"Player model\"\n            onChange={(event) => {\n              router.push(`?filter=${event.target.value}`);\n            }}\n            value={selectedModel}\n          >\n            <option value=\"new\">All new skins âœ¨</option>\n            <optgroup label=\"Players\" data-model-type=\"player\">\n              <option value=\"lmale\">Human Male &bull; Light</option>\n              <option value=\"mmale\">Human Male &bull; Medium</option>\n              <option value=\"hmale\">Human Male &bull; Heavy</option>\n              <option value=\"lfemale\">Human Female &bull; Light</option>\n              <option value=\"mfemale\">Human Female &bull; Medium</option>\n              <option value=\"hfemale\">Human Female &bull; Heavy</option>\n              <option value=\"lbioderm\">Bioderm &bull; Light</option>\n              <option value=\"mbioderm\">Bioderm &bull; Medium</option>\n              <option value=\"hbioderm\">Bioderm &bull; Heavy</option>\n            </optgroup>\n            <optgroup label=\"Weapons\" data-model-type=\"weapon\">\n              <option value=\"disc\">Disc Launcher</option>\n              <option value=\"chaingun\">Chaingun</option>\n              <option value=\"grenade_launcher\">Grenade Launcher</option>\n              <option value=\"sniper\">Laser Rifle</option>\n              <option value=\"plasmathrower\">Plasma Cannon</option>\n              <option value=\"energy\">Blaster</option>\n              <option value=\"shocklance\">Shocklance</option>\n              <option value=\"elf\">ELF Projector</option>\n              <option value=\"missile\">Missile Launcher</option>\n              <option value=\"mortar\">Mortar</option>\n              <option value=\"repair\">Repair Pack</option>\n              <option value=\"targeting\">Targeting Laser</option>\n            </optgroup>\n          </select>\n          <a\n            href=\"https://github.com/exogen/t2-model-skinner\"\n            className={styles.IconLink}\n          >\n            <FaGithub size={32} />\n          </a>\n        </div>\n        {isLoaded ? (\n          <div className={styles.Gallery}>\n            {filteredSkins.map((name) => {\n              let skinName;\n              let skinModel;\n              if (typeof name === \"string\") {\n                skinName = name;\n                skinModel = actualModel;\n              } else {\n                skinName = name.name;\n                skinModel = name.model;\n              }\n              const url = `${baseManifestPath}/gallery/${encodeURIComponent(\n                skinName\n              )}.${skinModel}.webp`;\n\n              return (\n                <div key={`${skinName}:${skinModel}`} className={styles.Skin}>\n                  <img\n                    className={styles.Preview}\n                    loading=\"lazy\"\n                    src={url}\n                    width={680}\n                    height={800}\n                    alt={skinName}\n                  />\n                  <div className={styles.Name}>{skinName}</div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <CgSpinnerTwo className={styles.Spinner} />\n        )}\n      </main>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GalleryPage\":\"gallery_GalleryPage__QyCLn\",\"Tools\":\"gallery_Tools__COicv\",\"Back\":\"gallery_Back__xvbOe\",\"IconLink\":\"gallery_IconLink__7NlBA\",\"Gallery\":\"gallery_Gallery__ZMJE_\",\"Skin\":\"gallery_Skin__Ep_rb\",\"Preview\":\"gallery_Preview__JGf2f\",\"Name\":\"gallery_Name__W9Aoc\",\"Spinner\":\"gallery_Spinner__9jTLL\",\"spin\":\"gallery_spin__EVmH5\",\"Label\":\"gallery_Label__kJfDw\"};"],"names":["window","__NEXT_P","push","__webpack_require__","defaultManifest","customSkins","newSkins","emptySkins","modelOrder","lmale","mmale","lfemale","mfemale","hmale","lbioderm","mbioderm","hbioderm","GalleryPage","manifest","router","useRouter","isLoaded","useManifest","setManifest","useState","useEffect","controller","AbortController","signal","ignore","loadCustomSkins","res","fetch","concat","json","err","console","error","abort","selectedModel","setSelectedModel","actualModel","newSkinList","useMemo","allNewSkins","Object","entries","forEach","model","names","param","map","name","orderBy","skin","toLowerCase","filteredSkins","filter","query","jsx_runtime","jsxs","Fragment","jsx","Head","title","main","className","styles","div","Link","href","FaChevronLeft","size","span","select","tabIndex","id","aria-label","onChange","event","target","value","option","optgroup","label","data-model-type","a","FaGithub","skinName","skinModel","url","encodeURIComponent","img","loading","src","width","height","alt","CgSpinnerTwo","module","exports"],"sourceRoot":""}