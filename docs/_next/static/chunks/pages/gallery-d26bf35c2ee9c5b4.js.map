{"version":3,"file":"static/chunks/pages/gallery-d26bf35c2ee9c5b4.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/useManifest.ts","webpack://_N_E/./src/pages/gallery.tsx","webpack://_N_E/./src/pages/gallery.module.css","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/gallery\",\n      function () {\n        return require(\"private-next-pages/gallery.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/gallery\"])\n      });\n    }\n  ","import { useState, useEffect } from \"react\";\n\nexport type Manifest = {\n  customSkins: Record<string, string[]>;\n  newSkins: Record<string, string[]>;\n};\n\nconst baseManifestPath = `https://exogen.github.io/t2-skins`;\nexport const defaultManifest: Manifest = {\n  customSkins: {},\n  newSkins: {},\n};\n\nexport default function useManifest(): [Manifest, boolean] {\n  const [manifest, setManifest] = useState<Manifest>(defaultManifest);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    let ignore = false;\n\n    const loadCustomSkins = async () => {\n      let res;\n      try {\n        res = await fetch(`${baseManifestPath}/skins.json`, { signal });\n        if (!ignore) {\n          const json = await res.json();\n          if (!ignore) {\n            setManifest(json as Manifest);\n          }\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    loadCustomSkins();\n\n    return () => {\n      ignore = true;\n      controller.abort();\n    };\n  }, []);\n\n  const isLoaded = manifest !== defaultManifest;\n  return [manifest, isLoaded];\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { CgSpinnerTwo } from \"react-icons/cg\";\nimport { FaChevronLeft, FaGithub } from \"react-icons/fa\";\nimport { useRouter } from \"next/router\";\nimport orderBy from \"lodash.orderby\";\nimport useManifest from \"../useManifest\";\nimport styles from \"./gallery.module.css\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\n\nconst baseManifestPath = `https://exogen.github.io/t2-skins`;\nconst emptySkins: string[] = [];\n\nexport default function GalleryPage() {\n  const router = useRouter();\n  const [manifest, isLoaded] = useManifest();\n  const [selectedModel, setSelectedModel] = useState(\"lmale\");\n  const actualModel = selectedModel === \"hfemale\" ? \"hmale\" : selectedModel;\n  const customSkins = manifest.customSkins?.[actualModel] ?? emptySkins;\n\n  const newSkinList = useMemo(() => {\n    if (manifest?.newSkins && selectedModel === \"new\") {\n      const skinsByName = new Map<string, string[]>();\n      Object.entries(manifest.newSkins).forEach(([model, names]) => {\n        names.forEach((name) => {\n          const skinModels = skinsByName.get(name) ?? [];\n          skinModels.push(model);\n          skinsByName.set(name, skinModels);\n        });\n      });\n      const sortedSkinNames = orderBy(\n        Array.from(skinsByName.keys()),\n        [(name: string) => name.toLowerCase()],\n        [\"asc\"]\n      );\n      const allNewSkins: Array<{ name: string; model: string }> = [];\n      sortedSkinNames.forEach((name: string) => {\n        const skinModels = skinsByName.get(name) ?? [];\n        allNewSkins.push(...skinModels.map((model) => ({ name, model })));\n      });\n      return allNewSkins;\n    } else {\n      return [];\n    }\n  }, [selectedModel, manifest]);\n\n  const filteredSkins = selectedModel === \"new\" ? newSkinList : customSkins;\n\n  const filter =\n    router.query.filter && typeof router.query.filter === \"string\"\n      ? router.query.filter\n      : \"lmale\";\n\n  useEffect(() => {\n    setSelectedModel(filter);\n  }, [filter]);\n\n  return (\n    <>\n      <Head>\n        <title>Tribes 2 Skin Gallery</title>\n      </Head>\n      <main className={styles.GalleryPage}>\n        <div className={styles.Tools}>\n          <Link className={styles.Back} href=\"../\">\n            <FaChevronLeft size={12} className={styles.Icon} />{\" \"}\n            <span className={styles.Label}>Back to Editor</span>\n          </Link>\n          <select\n            tabIndex={0}\n            id=\"ModelSelect\"\n            aria-label=\"Player model\"\n            onChange={(event) => {\n              router.push(`?filter=${event.target.value}`);\n            }}\n            value={selectedModel}\n          >\n            <option value=\"new\">All new skins âœ¨</option>\n            <option value=\"lmale\">Human Male &middot; Light</option>\n            <option value=\"mmale\">Human Male &middot; Medium</option>\n            <option value=\"hmale\">Human Male &middot; Heavy</option>\n            <option value=\"lfemale\">Human Female &middot; Light</option>\n            <option value=\"mfemale\">Human Female &middot; Medium</option>\n            <option value=\"hfemale\">Human Female &middot; Heavy</option>\n            <option value=\"lbioderm\">Bioderm &middot; Light</option>\n            <option value=\"mbioderm\">Bioderm &middot; Medium</option>\n            <option value=\"hbioderm\">Bioderm &middot; Heavy</option>\n          </select>\n          <a\n            href=\"https://github.com/exogen/t2-model-skinner\"\n            className={styles.IconLink}\n          >\n            <FaGithub size={32} />\n          </a>\n        </div>\n        {isLoaded ? (\n          <div className={styles.Gallery}>\n            {filteredSkins.map((name) => {\n              let skinName;\n              let skinModel;\n              if (typeof name === \"string\") {\n                skinName = name;\n                skinModel = actualModel;\n              } else {\n                skinName = name.name;\n                skinModel = name.model;\n              }\n              const url = `${baseManifestPath}/gallery/${encodeURIComponent(\n                skinName\n              )}.${skinModel}.webp`;\n\n              return (\n                <div key={`${skinName}:${skinModel}`} className={styles.Skin}>\n                  <img\n                    className={styles.Preview}\n                    loading=\"lazy\"\n                    src={url}\n                    width={680}\n                    height={800}\n                    alt={skinName}\n                  />\n                  <div className={styles.Name}>{skinName}</div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <CgSpinnerTwo className={styles.Spinner} />\n        )}\n      </main>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GalleryPage\":\"gallery_GalleryPage__QyCLn\",\"Tools\":\"gallery_Tools__COicv\",\"Back\":\"gallery_Back__xvbOe\",\"IconLink\":\"gallery_IconLink__7NlBA\",\"Gallery\":\"gallery_Gallery__ZMJE_\",\"Skin\":\"gallery_Skin__Ep_rb\",\"Preview\":\"gallery_Preview__JGf2f\",\"Name\":\"gallery_Name__W9Aoc\",\"Spinner\":\"gallery_Spinner__9jTLL\",\"spin\":\"gallery_spin__EVmH5\",\"Label\":\"gallery_Label__kJfDw\"};"],"names":["window","__NEXT_P","push","__webpack_require__","defaultManifest","customSkins","newSkins","emptySkins","GalleryPage","manifest","router","useRouter","isLoaded","useManifest","setManifest","useState","useEffect","controller","AbortController","signal","ignore","loadCustomSkins","res","fetch","concat","json","err","console","error","abort","selectedModel","setSelectedModel","actualModel","newSkinList","useMemo","skinsByName","Map","Object","entries","forEach","model","names","param","skinModels","get","name","set","sortedSkinNames","orderBy","Array","from","keys","toLowerCase","allNewSkins","map","filteredSkins","filter","query","jsx_runtime","jsxs","Fragment","jsx","Head","title","main","className","styles","div","Link","href","FaChevronLeft","size","span","select","tabIndex","id","aria-label","onChange","event","target","value","option","a","FaGithub","skinName","skinModel","url","encodeURIComponent","img","loading","src","width","height","alt","CgSpinnerTwo","module","exports"],"sourceRoot":""}