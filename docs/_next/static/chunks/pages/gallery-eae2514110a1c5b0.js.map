{"version":3,"file":"static/chunks/pages/gallery-eae2514110a1c5b0.js","mappings":"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","sources":["webpack://_N_E/?e81b","webpack://_N_E/./src/pages/gallery.tsx","webpack://_N_E/./src/useManifest.ts","webpack://_N_E/./src/pages/gallery.module.css","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/gallery\",\n      function () {\n        return require(\"private-next-pages/gallery.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/gallery\"])\n      });\n    }\n  ","import { useEffect, useMemo, useState } from \"react\";\nimport { CgSpinnerTwo } from \"react-icons/cg\";\nimport { FaChevronLeft, FaGithub } from \"react-icons/fa\";\nimport { useRouter } from \"next/router\";\nimport orderBy from \"lodash.orderby\";\nimport useManifest from \"../useManifest\";\nimport styles from \"./gallery.module.css\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\n\nconst baseManifestPath = `https://exogen.github.io/t2-skins`;\nconst emptySkins: string[] = [];\n\nconst modelOrder: Record<string, number> = {\n  lmale: 0,\n  mmale: 1,\n  lfemale: 2,\n  mfemale: 3,\n  hmale: 4,\n  lbioderm: 5,\n  mbioderm: 6,\n  hbioderm: 7,\n  energy: 8,\n  disc: 9,\n  chaingun: 10,\n  grenade_launcher: 11,\n  sniper: 12,\n  elf: 13,\n  shocklance: 14,\n  plasmathrower: 15,\n  missile: 16,\n  mortar: 17,\n  repair: 18,\n  targeting: 19,\n  vehicle_grav_scout: 20,\n  vehicle_grav_tank: 21,\n  turret_assaulttank_mortar: 22,\n  vehicle_land_mpbbase: 23,\n  vehicle_air_scout: 24,\n  vehicle_air_bomber: 25,\n  vehicle_air_hapc: 26,\n};\n\nexport default function GalleryPage() {\n  const router = useRouter();\n  const [manifest, isLoaded] = useManifest();\n  const [selectedModel, setSelectedModel] = useState(\"lmale\");\n  const actualModel = selectedModel === \"hfemale\" ? \"hmale\" : selectedModel;\n  const customSkins = manifest.customSkins?.[actualModel] ?? emptySkins;\n\n  const newSkinList = useMemo(() => {\n    if (manifest?.newSkins && selectedModel === \"new\") {\n      const allNewSkins: Array<{ name: string; model: string }> = [];\n\n      Object.entries(manifest.newSkins).forEach(([model, names]) => {\n        allNewSkins.push(...names.map((name) => ({ name, model })));\n      });\n\n      return orderBy(\n        allNewSkins,\n        [(skin) => skin.name.toLowerCase(), (skin) => modelOrder[skin.model]],\n        [\"asc\", \"asc\"]\n      );\n    } else {\n      return [];\n    }\n  }, [selectedModel, manifest]);\n\n  const filteredSkins = selectedModel === \"new\" ? newSkinList : customSkins;\n\n  const filter =\n    router.query.filter && typeof router.query.filter === \"string\"\n      ? router.query.filter\n      : \"lmale\";\n\n  useEffect(() => {\n    setSelectedModel(filter);\n  }, [filter]);\n\n  return (\n    <>\n      <Head>\n        <title>Tribes 2 Skin Gallery</title>\n      </Head>\n      <main className={styles.GalleryPage}>\n        <div className={styles.Tools}>\n          <Link className={styles.Back} href=\"../\">\n            <FaChevronLeft size={12} className={styles.Icon} />{\" \"}\n            <span className={styles.Label}>Back to Editor</span>\n          </Link>\n          <select\n            tabIndex={0}\n            id=\"ModelSelect\"\n            aria-label=\"Player model\"\n            onChange={(event) => {\n              router.push(`?filter=${event.target.value}`);\n            }}\n            value={selectedModel}\n          >\n            <option value=\"new\">All new skins âœ¨</option>\n            <optgroup label=\"Players\" data-model-type=\"player\">\n              <option value=\"lmale\">Human Male &bull; Light</option>\n              <option value=\"mmale\">Human Male &bull; Medium</option>\n              <option value=\"hmale\">Human Male &bull; Heavy</option>\n              <option value=\"lfemale\">Human Female &bull; Light</option>\n              <option value=\"mfemale\">Human Female &bull; Medium</option>\n              <option value=\"hfemale\">Human Female &bull; Heavy</option>\n              <option value=\"lbioderm\">Bioderm &bull; Light</option>\n              <option value=\"mbioderm\">Bioderm &bull; Medium</option>\n              <option value=\"hbioderm\">Bioderm &bull; Heavy</option>\n            </optgroup>\n            <optgroup label=\"Weapons\" data-model-type=\"weapon\">\n              <option value=\"disc\">Disc Launcher</option>\n              <option value=\"chaingun\">Chaingun</option>\n              <option value=\"grenade_launcher\">Grenade Launcher</option>\n              <option value=\"sniper\">Laser Rifle</option>\n              <option value=\"plasmathrower\">Plasma Cannon</option>\n              <option value=\"energy\">Blaster</option>\n              <option value=\"shocklance\">Shocklance</option>\n              <option value=\"elf\">ELF Projector</option>\n              <option value=\"missile\">Missile Launcher</option>\n              <option value=\"mortar\">Mortar</option>\n              <option value=\"repair\">Repair Pack</option>\n              <option value=\"targeting\">Targeting Laser</option>\n            </optgroup>\n            <optgroup label=\"Vehicles\" data-model-type=\"vehicle\">\n              <option value=\"vehicle_grav_scout\">Wildcat Grav Cycle</option>\n              <option value=\"vehicle_grav_tank\">Beowulf Assault Tank</option>\n              <option value=\"vehicle_land_mpbbase\">\n                Jericho Mobile Point Base\n              </option>\n              <option value=\"vehicle_air_scout\">Shrike Scout Fighter</option>\n              <option value=\"vehicle_air_bomber\">Thundersword Bomber</option>\n              <option value=\"vehicle_air_hapc\">HAVOC Gunship Transport</option>\n            </optgroup>\n          </select>\n          <a\n            href=\"https://github.com/exogen/t2-model-skinner\"\n            className={styles.IconLink}\n          >\n            <FaGithub size={32} />\n          </a>\n        </div>\n        {isLoaded ? (\n          <div className={styles.Gallery}>\n            {filteredSkins.map((name) => {\n              let skinName;\n              let skinModel;\n              if (typeof name === \"string\") {\n                skinName = name;\n                skinModel = actualModel;\n              } else {\n                skinName = name.name;\n                skinModel = name.model;\n              }\n              const url = `${baseManifestPath}/gallery/${encodeURIComponent(\n                skinName\n              )}.${skinModel}.webp`;\n\n              return (\n                <Link\n                  key={`${skinName}:${skinModel}`}\n                  className={styles.Skin}\n                  href={`/?m=${skinModel}&s=${encodeURIComponent(skinName)}`}\n                >\n                  <img\n                    className={styles.Preview}\n                    loading=\"lazy\"\n                    src={url}\n                    width={680}\n                    height={800}\n                    alt={skinName}\n                  />\n                  <div className={styles.Name}>{skinName}</div>\n                </Link>\n              );\n            })}\n          </div>\n        ) : (\n          <CgSpinnerTwo className={styles.Spinner} />\n        )}\n      </main>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport type Manifest = {\n  customSkins: Record<string, string[]>;\n  newSkins: Record<string, string[]>;\n};\n\nconst baseManifestPath = `https://exogen.github.io/t2-skins`;\nexport const defaultManifest: Manifest = {\n  customSkins: {},\n  newSkins: {},\n};\n\nexport default function useManifest(): [Manifest, boolean] {\n  const [manifest, setManifest] = useState<Manifest>(defaultManifest);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    let ignore = false;\n\n    const loadCustomSkins = async () => {\n      let res;\n      try {\n        res = await fetch(`${baseManifestPath}/skins.json`, { signal });\n        if (!ignore) {\n          const json = await res.json();\n          if (!ignore) {\n            setManifest(json as Manifest);\n          }\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    loadCustomSkins();\n\n    return () => {\n      ignore = true;\n      controller.abort();\n    };\n  }, []);\n\n  const isLoaded = manifest !== defaultManifest;\n  return [manifest, isLoaded];\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GalleryPage\":\"gallery_GalleryPage__QyCLn\",\"Tools\":\"gallery_Tools__COicv\",\"Back\":\"gallery_Back__xvbOe\",\"IconLink\":\"gallery_IconLink__7NlBA\",\"Gallery\":\"gallery_Gallery__ZMJE_\",\"Skin\":\"gallery_Skin__Ep_rb\",\"Preview\":\"gallery_Preview__JGf2f\",\"Name\":\"gallery_Name__W9Aoc\",\"Spinner\":\"gallery_Spinner__9jTLL\",\"spin\":\"gallery_spin__EVmH5\",\"Label\":\"gallery_Label__kJfDw\"};"],"names":["window","__NEXT_P","push","__webpack_require__","emptySkins","modelOrder","lmale","mmale","lfemale","mfemale","hmale","lbioderm","mbioderm","hbioderm","energy","disc","chaingun","grenade_launcher","sniper","elf","shocklance","plasmathrower","missile","mortar","repair","targeting","vehicle_grav_scout","vehicle_grav_tank","turret_assaulttank_mortar","vehicle_land_mpbbase","vehicle_air_scout","vehicle_air_bomber","vehicle_air_hapc","GalleryPage","manifest","router","useRouter","isLoaded","useManifest","selectedModel","setSelectedModel","useState","actualModel","customSkins","newSkinList","useMemo","newSkins","allNewSkins","Object","entries","forEach","model","names","param","map","name","orderBy","skin","toLowerCase","filteredSkins","filter","query","useEffect","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","jsx","Head","title","main","className","styles","div","Link","href","FaChevronLeft","size","span","select","tabIndex","id","aria-label","onChange","concat","event","target","value","option","optgroup","label","data-model-type","a","FaGithub","skinName","skinModel","url","encodeURIComponent","img","loading","src","width","height","alt","CgSpinnerTwo","defaultManifest","setManifest","controller","AbortController","signal","ignore","loadCustomSkins","res","fetch","json","err","console","error","abort","module","exports"],"sourceRoot":""}